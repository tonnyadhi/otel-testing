services:
  otelhttpservice:
    image: otel-testing:local
    build:
      context: .
    environment:
      APP_POSTGRES_HOST: postgres
      APP_POSTGRES_PASSWORD: oteltesting
      APP_OTEL_ENABLE: true
      APP_OTEL_COLLECTORENDPOINT: otel-collector:4317
      APP_OTEL_INSECUREMODE: true
      APP_OTEL_SERVICENAME: otel-http-service
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - otel-collector

  postgres:
    image: postgres:14.12-alpine3.19
    environment:
      POSTGRES_PASSWORD: oteltesting
    configs:
      - source: postgres-schema
        target: /docker-entrypoint-initdb.d/schema.sql
    volumes:
      - postgres-data:/var/lib/postgresql/data

  otel-collector:
    image: ${OTELCOL_IMG}
    restart: always
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_SITE=${DD_SITE}
    command:
      ["--config=/etc/otel-collector-config-datadog.yml", "${OTELCOL_ARGS}"]
    volumes:
      - ./otel-collector-config-datadog.yml:/etc/otel-collector-config-datadog.yml
    ports:
      - "1888:1888" # pprof extension
      - "8888:8888" # Prometheus metrics exposed by the collector
      - "8889:8889" # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317" # OTLP gRPC receiver
      - "55679:55679" # zpages extension

configs:
  postgres-schema:
    file: sql/schema.sql

volumes:
  postgres-data:
