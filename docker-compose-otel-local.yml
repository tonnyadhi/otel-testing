services:
  otelhttpservice:
    image: otel-testing:local
    build:
      context: .
    environment:
      APP_POSTGRES_HOST: postgres
      APP_POSTGRES_PASSWORD: oteltesting
      APP_OTEL_ENABLE: true
      APP_OTEL_COLLECTORENDPOINT: otel-collector:4317
      APP_OTEL_INSECUREMODE: true
      APP_OTEL_SERVICENAME: otel-http-service
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - otel-collector

  postgres:
    image: postgres:14.12-alpine3.19
    environment:
      POSTGRES_PASSWORD: oteltesting
    configs:
      - source: postgres-schema
        target: /docker-entrypoint-initdb.d/schema.sql
    volumes:
      - postgres-data:/var/lib/postgresql/data

  jaeger-all-in-one:
    image: jaegertracing/all-in-one:latest
    restart: always
    ports:
      - "16686:16686"
      - "14268"
      - "14250"

  zipkin-all-in-one:
    image: openzipkin/zipkin:latest
    environment:
      - JAVA_OPTS=-Xms1024m -Xmx1024m -XX:+ExitOnOutOfMemoryError
    restart: always
    ports:
      - "9411:9411"

  prometheus:
    image: ${PROMETHEUS_IMAGE}
    container_name: prometheus
    command:
      - --web.console.templates=/etc/prometheus/consoles
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --storage.tsdb.retention.time=1h
      - --config.file=/etc/prometheus/prometheus-config.yml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --web.route-prefix=/
      - --enable-feature=exemplar-storage
      - --enable-feature=otlp-write-receiver
    volumes:
      - ./prometheus-config.yml:/etc/prometheus/prometheus-config.yml
    deploy:
      resources:
        limits:
          memory: 300M
    restart: unless-stopped
    ports:
      - "${PROMETHEUS_SERVICE_PORT}:${PROMETHEUS_SERVICE_PORT}"

  otel-collector:
    image: ${OTELCOL_IMG}
    restart: always
    command:
      ["--config=/etc/otel-collector-config-local.yml", "${OTELCOL_ARGS}"]
    volumes:
      - ./otel-collector-config-local.yml:/etc/otel-collector-config-local.yml
    ports:
      - "1888:1888" # pprof extension
      - "8888:8888" # Prometheus metrics exposed by the collector
      - "8889:8889" # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317" # OTLP gRPC receiver
      - "55679:55679" # zpages extension
    depends_on:
      - jaeger-all-in-one
      - zipkin-all-in-one

configs:
  postgres-schema:
    file: sql/schema.sql

volumes:
  postgres-data:
